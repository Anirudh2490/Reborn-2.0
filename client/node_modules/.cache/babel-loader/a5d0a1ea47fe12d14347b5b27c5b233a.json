{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport Picture from \"./Picture\";\nimport React from \"react\";\nimport cxs from \"cxs/component\";\nimport PropTypes from \"prop-types\";\nvar Wrapper = cxs(\"div\")({\n  width: \"100%\",\n  height: \"100%\",\n  position: \"relative\"\n});\nvar PictureWrapper = cxs(\"div\")({\n  overflow: \"hidden\",\n  top: 0,\n  left: 0,\n  right: 0,\n  bottom: 0,\n  position: \"absolute\"\n});\n\nvar Fullsized = function Fullsized(Component) {\n  return function (_ref) {\n    var className = _ref.className,\n        wrapperClassName = _ref.wrapperClassName,\n        children = _ref.children,\n        rest = _objectWithoutPropertiesLoose(_ref, [\"className\", \"wrapperClassName\", \"children\"]);\n\n    var PictureComponent = cxs(Component)(function (_ref2) {\n      var _ref2$cover = _ref2.cover,\n          cover = _ref2$cover === void 0 ? \"both\" : _ref2$cover,\n          _ref2$center = _ref2.center,\n          center = _ref2$center === void 0 ? true : _ref2$center;\n      return {\n        position: \"absolute\",\n        top: center ? \"50%\" : 0,\n        left: center ? \"50%\" : 0,\n        transform: center ? \"translate(-50%, -50%)\" : \"none\",\n        width: cover === \"width\" ? \"100%\" : \"auto\",\n        height: cover === \"height\" ? \"100%\" : \"auto\",\n        minHeight: cover === \"both\" ? \"100%\" : \"none\",\n        minWidth: cover === \"both\" ? \"100%\" : \"none\"\n      };\n    });\n    PictureComponent.propTypes = {\n      center: PropTypes.bool,\n      cover: PropTypes.string\n    };\n    return React.createElement(Wrapper, {\n      className: wrapperClassName\n    }, React.createElement(PictureWrapper, null, React.createElement(PictureComponent, _extends({\n      className: className\n    }, rest)), children));\n  };\n};\n\nexport default Fullsized(Picture);","map":null,"metadata":{},"sourceType":"module"}